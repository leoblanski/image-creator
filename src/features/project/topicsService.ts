export interface Topic {
  id: string;
  title: string;
  description: string;
  category: string;
  prompt: string; // Prompt para a OpenAI gerar o conte√∫do
  tags: string[];
  cta: string;
}

export interface TopicsByCategory {
  category: string;
  description: string;
  topics: Topic[];
}

// T√≥picos otimizados para o Instagram
export const topicsData: TopicsByCategory[] = [
  {
    category: 'üöÄ Carreira em TI',
    description: 'Dicas para crescimento profissional e mercado de trabalho',
    topics: [
      {
        id: 'first-job',
        title: 'Como conseguir o primeiro emprego em TI',
        description: 'Guia completo para ingressar no mercado de trabalho',
        category: 'üöÄ Carreira em TI',
        prompt: `Crie um carrossel para Instagram com dicas PR√ÅTICAS e ESPEC√çFICAS sobre como conseguir o primeiro emprego em TI.
        
        ESTRUTURA OBRIGAT√ìRIA:
        1. Primeiro slide: T√≠tulo impactante + 1 frase que desperte interesse
        2. Slides intermedi√°rios: Apenas UMA dica espec√≠fica por slide (m√°x. 2 linhas)
        3. √öltimo slide: CTA direto com a√ß√£o clara
        
        DIRETRIZES ESSENCIAIS:
        - Seja DIRETO: Cada dica deve ter no m√°ximo 10 palavras
        - Seja ESPEC√çFICO: Evite generalidades como "estude bastante"
        - Seja PR√ÅTICO: D√™ exemplos concretos e acion√°veis
        - Use EMOJIS relevantes para cada dica
        - Use linguagem coloquial e acess√≠vel
        
        EXEMPLOS DO QUE QUEREMOS:
        ‚ùå Ruim: "Aprenda a programar bem"
        ‚úÖ Bom: "Domine os 20% do JavaScript mais usados no mercado"
        
        ‚ùå Ruim: "Fa√ßa networking"
        ‚úÖ Bom: "Comente em 3 posts de devs s√™nior por dia no LinkedIn"
        
        T√ìPICOS PARA INCLUIR:
        - Como destacar projetos pessoais no curr√≠culo
        - Quais tecnologias priorizar em 2025
        - Erros comuns em entrevistas t√©cnicas
        - Como se destacar sem experi√™ncia pr√©via
        - O que os recrutadores realmente procuram`,
        tags: ['carreira', 'emprego', 'iniciante', 'dicas'],
        cta: 'Salve este post e siga para mais dicas! #BlanskiDev'
      },
      {
        id: 'freelance',
        title: 'Trabalhando como freelancer',
        description: 'Como come√ßar a ganhar dinheiro com programa√ß√£o',
        category: 'üöÄ Carreira em TI',
        prompt: `Crie um carrossel para Instagram com digas PR√ÅTICAS sobre trabalhar como freelancer em TI.
        
        ESTRUTURA OBRIGAT√ìRIA:
        1. Primeiro slide: T√≠tulo chamativo + 1 frase que gere identifica√ß√£o
        2. Slides intermedi√°rios: Apenas UMA dica espec√≠fica por slide (m√°x. 2 linhas)
        3. √öltimo slide: CTA direto com a√ß√£o clara
        
        DIRETRIZES ESSENCIAIS:
        - Seja DIRETO: Cada dica deve ter no m√°ximo 10 palavras
        - Seja ESPEC√çFICO: Evite conselhos gen√©ricos
        - Seja PR√ÅTICO: D√™ exemplos concretos e acion√°veis
        - Use EMOJIS relevantes para cada dica
        
        EXEMPLOS DO QUE QUEREMOS:
        ‚ùå Ruim: "Cobrar bem pelos seus servi√ßos"
        ‚úÖ Bom: "Cobrar R$X por hora (m√©dia do mercado em 2025)"
        
        ‚ùå Ruim: "Use boas ferramentas"
        ‚úÖ Bom: "Use o Toggl para controle de horas e Notion para organiza√ß√£o"
        
        T√ìPICOS PARA INCLUIR:
        - Como precificar seu trabalho (valores reais)
        - Onde encontrar clientes internacionais
        - Como evitar calotes
        - Melhores plataformas para freelancers
        - Como escrever propostas vencedoras`,
        
        tags: ['freelance', 'trabalho', 'dinheiro', 'dicas'],
        cta: 'Quer come√ßar como freelancer? Salve este post! #Freelancer'
      }
    ]
  },
  {
    category: 'üíª Tecnologias em Alta',
    description: 'O que est√° em alta no mercado de desenvolvimento',
    topics: [
      {
        id: 'languages-2025',
        title: 'Linguagens mais promissoras em 2025',
        description: 'Quais linguagens valem a pena aprender',
        category: 'üíª Tecnologias em Alta',
        prompt: `Crie um carrossel para Instagram sobre as linguagens de programa√ß√£o mais promissoras para 2025. 
        Destaque as principais caracter√≠sticas de cada linguagem, casos de uso e por que s√£o relevantes. 
        Inclua JavaScript/TypeScript, Python, Rust, Go e Kotlin. 
        Use uma linguagem objetiva e inclua emojis para tornar o conte√∫do mais atrativo.`,
        tags: ['linguagens', 'programa√ß√£o', 'tecnologia', 'dicas'],
        cta: 'Qual linguagem voc√™ quer aprender? Comenta a√≠! #Programa√ß√£o'
      },
      {
        id: 'web-frameworks',
        title: 'Frameworks web em 2025',
        description: 'As melhores op√ß√µes para desenvolvimento web',
        category: 'üíª Tecnologias em Alta',
        prompt: `Crie um carrossel para Instagram sobre os melhores frameworks web para 2025. 
        Compare React, Next.js, Svelte e Astro, destacando pontos fortes, casos de uso ideais e 
        tend√™ncias do mercado. Use uma linguagem acess√≠vel para iniciantes.`,
        tags: ['web', 'frontend', 'frameworks', 'tecnologia'],
        cta: 'Qual seu framework favorito? #WebDev'
      }
    ]
  },
  {
    category: 'üìö Aprendizado',
    description: 'Dicas e estrat√©gias para aprender programa√ß√£o',
    topics: [
      {
        id: 'study-methods',
        title: 'Como estudar programa√ß√£o',
        description: 'M√©todos eficazes de aprendizado',
        category: 'üìö Aprendizado',
        prompt: `Crie um carrossel para Instagram com dicas sobre como estudar programa√ß√£o de forma eficiente. 
        Aborde m√©todos de aprendizado, dicas de organiza√ß√£o, recursos gratuitos, como manter a motiva√ß√£o 
        e como praticar de forma efetiva. Use uma linguagem motivacional e inclua emojis.`,
        tags: ['estudo', 'aprendizado', 'dicas', 'programa√ß√£o'],
        cta: 'Salve para n√£o perder essas dicas! #AprendaProgramar'
      },
      {
        id: 'portfolio-projects',
        title: 'Projetos para o portf√≥lio',
        description: 'Ideias para impressionar recrutadores',
        category: 'üìö Aprendizado',
        prompt: `Crie um carrossel para Instagram com ideias de projetos para incluir no portf√≥lio. 
        Inclua projetos de diferentes n√≠veis de complexidade, desde iniciante at√© avan√ßado, 
        com exemplos pr√°ticos e dicas de como implementar.`,
        tags: ['portf√≥lio', 'projetos', 'carreira', 'dicas'],
        cta: 'Qual projeto voc√™ vai fazer primeiro? #Portf√≥lioDev'
      }
    ]
  },
  {
    category: 'üåé Trabalho Remoto',
    description: 'Como trabalhar para empresas do exterior',
    topics: [
      {
        id: 'remote-work',
        title: 'Como conseguir trabalho remoto',
        description: 'Passo a passo para trabalhar de qualquer lugar',
        category: 'üåé Trabalho Remoto',
        prompt: `Crie um carrossel para Instagram com dicas sobre como conseguir trabalho remoto como desenvolvedor. 
        Inclua onde encontrar vagas, como se preparar para entrevistas em ingl√™s, como se destacar, 
        como precificar seu trabalho e ferramentas essenciais.`,
        tags: ['remoto', 'trabalho', 'internacional', 'carreira'],
        cta: 'Sonha em trabalhar remoto? Salve este post! #TrabalhoRemoto'
      }
    ]
  }
];

export class TopicsService {
  private static instance: TopicsService;

  static getInstance(): TopicsService {
    if (!TopicsService.instance) {
      TopicsService.instance = new TopicsService();
    }
    return TopicsService.instance;
  }

  getCategories(): string[] {
    return topicsData.map(cat => cat.category);
  }

  getTopicsByCategory(category: string): Topic[] | undefined {
    const categoryData = topicsData.find(cat => cat.category === category);
    return categoryData?.topics;
  }

  getTopicById(id: string): Topic | undefined {
    for (const category of topicsData) {
      const topic = category.topics.find(t => t.id === id);
      if (topic) return topic;
    }
    return undefined;
  }

  getAllTopics(): Topic[] {
    return topicsData.flatMap(category => category.topics);
  }

  searchTopics(query: string): Topic[] {
    const searchTerm = query.toLowerCase();
    return this.getAllTopics().filter(
      topic =>
        topic.title.toLowerCase().includes(searchTerm) ||
        topic.description.toLowerCase().includes(searchTerm) ||
        topic.tags.some(tag => tag.toLowerCase().includes(searchTerm))
    );
  }

  // Gera um prompt completo para a OpenAI com base no t√≥pico selecionado
  generatePrompt(topicId: string, additionalInstructions?: string): string {
    const topic = this.getTopicById(topicId);
    if (!topic) return '';
    
    let prompt = `${topic.prompt}\n\n`;
    
    // Adiciona instru√ß√µes adicionais se fornecidas
    if (additionalInstructions) {
      prompt += `Instru√ß√µes adicionais: ${additionalInstructions}\n\n`;
    }
    
    // Adiciona formata√ß√£o para o carrossel
    prompt += `Formato de sa√≠da desejado:
    1. Crie entre 5 e 8 slides
    2. Cada slide deve ter um t√≠tulo curto (at√© 40 caracteres)
    3. O conte√∫do de cada slide deve ter no m√°ximo 120 caracteres
    4. Inclua emojis relevantes
    5. Use uma linguagem clara e direta
    `;
    
    return prompt;
  }
}

export const topicsService = TopicsService.getInstance();
